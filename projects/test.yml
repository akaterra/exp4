type: "project"

id: "test"
description: ""

resync:
  intervalSeconds: 300

artifacts:
  argocdApplication:
    type: "argocd:application"
    config:
      integration: "argocdStg"
  argocdApplicationImageTag:
    type: "fetchBy"
    dependsOn:
      - argocdApplication
    config:
      "ArgoCD Image tag":
        source: "argocdApplication.status.summary.images"
        filter:
          "...":
            contains:
              param: "ref.streamId"
        pattern: "\\:([\\w\\-\\.]+)$"
        keys:
          - 1
        to: null
        type: "dockerImage"
      "ArgoCD Deploy status":
        source: "argocdApplication.status.resources"
        filter:
          name:
            contain:
              param: "ref.streamId"
          kind:
            eq: "StatefulSet"
            pattern: null
        keys:
          - valuePath: "status"
        to: "link"
        type: "argocd:syncStatus"
  githubActionLog:
    type: "github:workflowJob:log"
    config:
      integration: "github"
  githubActionLogImageTag:
    type: "fetchBy"
    dependsOn:
      - githubActionLog
    config:
      "Image tag":
        source: "githubWorkflowRunJobLog"
        pattern: "Re\\-tagging\\: [\\w\\-]+:(\\w+\\-\\d+\\-\\d+)"
        keys:
          - 1
        type: "dockerImage"

definitions:
  none: null

integrations:
  gitHotfix:
    type: "git"
    config:
      dir: "/Users/Nikolay.klyuchev/dev/gp-analytics-service"
      branch: "v${version.major}.${version.minor}-hotfix"
  gitMaster:
    type: "git"
    config:
      dir: "/Users/Nikolay.klyuchev/dev/gp-analytics-service"
      branch: "main"
  bitbucketStg:
    type: "bitbucket"
    config:
      workspace: "dd80"
      branch: "v${version.major}.${version.minor}"
  bitbucketHotfix:
    type: "bitbucket"
    config:
      workspace: "dd80"
      branch: "v${version.major}.${version.minor}-hotfix"
  bitbucketMaster:
    type: "bitbucket"
    config:
      workspace: "dd80"
      branch: "master"
  gitlabStg:
    type: "gitlab"
    config:
      org: "getpackageltd"
      branch: "v${version.major}.${version.minor}"
  gitlabHotfix:
    type: "gitlab"
    config:
      org: "getpackageltd"
      branch: "v${version.major}.${version.minor}-hotfix"
  gitlabMain:
    type: "gitlab"
    config:
      org: "getpackageltd"
      branch: "main"
  argocdStg:
    type: "argocd"
    config:
      applicationName: "stg"
  github:
    type: "github"
    config:
      org: "getpackageltd"
  githubDev:
    type: "github"
    config:
      org: "getpackageltd"
      branch: "develop"
  githubStg:
    type: "github"
    config:
      org: "getpackageltd"
      branch: "v${version.major}.${version.minor}"
  githubHotfix:
    type: "github"
    config:
      org: "getpackageltd"
      branch: "v${version.major}.${version.minor}-hotfix"
  githubMaster:
    type: "github"
    config:
      org: "getpackageltd"
      branch: "master"
  githubMain:
    type: "github"
    config:
      org: "getpackageltd"
      branch: "main"

storages:
  github:
    type: "file"
    config:
      integration: "github"

versionings:
  release: &versioningRelease
    type: "semver"
    config:
      format: "v${version.major}-${version.minor}"
      namespace: "release"
      storage: "github"
  hotfix: &versioningHotfix
    type: "semver"
    config:
      format: "v${version.major}-${version.minor}-hotfix"
      namespace: "hotfix"
      storage: "github"
  current: &versioningCurrent
    type: "semver"
    config:
      format: "v${version.major}-${version.minor}"
      namespace: "current"
      storage: "github"

flows:
  dev:
    title: ""
    targets:
      - dev
    actions:
      test:
        title: "Run tests"
        steps:
          - type: "runAction"
            title: "Run tests"
            config:
              name: "test"
      test2:
        title: "Run tests 2"
        steps:
          - type: "runAction"
            title: "Run tests"
            config:
              name: "test"
        streams:
          - gp-deliveries-service

  release:
    title: ""
    targets:
      - stg
    actions:
      release:
        title: "Create release"
        steps:
          - type: "version:release"
            title: "Increase minor version"
            targets:
              - "stg"
          - type: "moveFrom"
            title: "Create release branch"
            targets:
              - "dev"
          - type: "streamVersion:override"
            title: ""
            targets:
              - "stg"
        params:
          releaseName:
            title: "Release name"
            type: "string"
            constraints:
              minLength: 1
              maxLength: 20
              optional: true
      finishRelease:
        title: "Finish release"
        description: "Move release to production and close release"
        steps:
          - type: "moveTo"
            title: ""
            targets:
              - "production"
          - type: "version:override"
            title: ""
            targets:
              - "stg:production"
          - type: "streamVersion:override"
            title: ""
            targets:
              - "stg:production"
          - type: "detach"
            title: ""
            targets:
              - "stg"
          - type: "bookmark"
            title: ""
            targets:
              - "production"
      mergeToDev:
        title: "Merge to develop"
        steps:
          - type: "moveTo"
            title: ""
            targets:
              - "dev"
      mergeFromDev:
        title: "Merge latest develop"
        steps:
          - type: "moveFrom"
            title: ""
            targets:
              - "dev"
      exclude:
        title: "Exclude"
        steps:
          - type: "detach"
            title: ""
            targets:
              - "stg"
          - type: "streamHistory:rollback"
            title: ""
            targets:
              - "stg"
      test:
        title: "Run tests"
        steps:
          - type: "runAction"
            title: "Run tests"
            config:
              name: "test"

  hotfix:
    title: ""
    targets:
      - stgHotfix
    actions:
      hotfix:
        title: "Create hotfix"
        steps:
          - type: "version:override"
            title: ""
            targets:
              - "production:stgHotfix"
          - type: "version:patch"
            title: ""
            targets:
              - "stgHotfix"
          - type: "streamVersion:override"
            title: ""
            targets:
              - "stgHotfix"
          - type: "moveFrom"
            title: ""
            targets:
              - "production"
      finishHotfix:
        title: "Finish hotfix"
        steps:
          - type: "moveTo"
            title: ""
            targets:
              - "production"
          - type: "version:override"
            title: ""
            targets:
              - "production"
          - type: "streamVersion:override"
            title: ""
            targets:
              - "production"
          - type: "detach"
            title: ""
            targets:
              - "stgHotfix"
          - type: "bookmark"
            title: ""
            targets:
              - "production"
      mergeToQa:
        title: "Merge to QA"
        steps:
          - type: "moveTo"
            title: ""
            targets:
              - "stg"
      mergeFromProduction:
        title: "Merge latest production"
        steps:
          - type: "moveFrom"
            title: ""
            targets:
              - "production"
          - type: "streamVersion:override"
            title: ""
            targets:
              - "stgHotfix"
      exclude:
        title: "Exclude"
        steps:
          - type: "detach"
            title: ""
            targets:
              - "stgHotfix"
          - type: "streamHistory:rollback"
            title: ""
            targets:
              - "stgHotfix"
      test:
        title: "Run tests"
        steps:
          - type: "runAction"
            title: "Run tests"
            config:
              name: "test"

  production:
    title: ""
    targets:
      - production
    actions:
      mergeToDevelop:
        title: "Merge to develop"
        steps:
          - type: "moveTo"
            title: ""
            targets:
              - "dev"

targets:
  dev:
    title: "Development"
    streams:
      gp-deliveries-service:
        type: "github"
        title: "Deliveries"
        config:
          integration: "githubDev"
      gp-deliveries-history-service:
        type: "github"
        title: "Deliveries history"
        config:
          integration: "githubDev"
        # artifacts:
        #   - "githubActionLogImageTag"
      # gp-routes-calc-dev:
      #   type: "github"
      #   title: "Routes calc"
      #   config:
      #     integration: "githubDev"
    versioning: null

  stg:
    title: "QA"
    streams:
      akaterra1/testa:
        type: "gitlab"
        title: "Test A"
        config:
          integration: "gitlabStg"
      # gp-deliveries-crud-service:
      #   type: "github"
      #   title: "Deliveries CRUD"
      #   config:
      #     integration: "githubStg"
      # gp-deliveries-service:
      #   type: "github"
      #   title: "Deliveries"
      #   config:
      #     integration: "githubStg"
      # gp-deliveries-history-service:
      #   type: "github"
      #   title: "Deliveries history"
      #   config:
      #     integration: "githubStg"
      #   artifacts:
      #     - "argocdApplicationImageTag"
      # gp-uam-service:
      #   type: "github"
      #   title: "UAM"
      #   config:
      #     integration: "githubStg"
    versioning: "release"

  stgHotfix:
    title: "QA Hotfix"
    streams:
      analytics:
        type: "git"
        title: "Test GIT"
        config:
          integration: "gitHotfix"
        actions:
          test:
            title: "Push to remote"
            steps:
              - type: "runAction"
                title: "Run tests"
                config:
                  name: "test"
      # testa:
      #   type: "bitbucket"
      #   title: "Test A bb"
      #   config:
      #     integration: "bitbucketHotfix"
      # akaterra1/testa:
      #   type: "gitlab"
      #   title: "Test A"
      #   config:
      #     integration: "gitlabHotfix"
      # gp-analytics-service:
      #   type: "github"
      #   title: "Analytics"
      #   config:
      #     integration: "githubHotfix"
      # gp-deliveries-service:
      #   type: "github"
      #   title: "Deliveries"
      #   config:
      #     integration: "githubHotfix"
    versioning: "hotfix"

  production:
    title: "Production"
    streams:
      analytics:
        type: "git"
        title: "Test GIT"
        config:
          integration: "gitMaster"
        tags:
          - ggg
          - aaa
      # testa:
      #   type: "bitbucket"
      #   title: "Test A bb"
      #   config:
      #     integration: "bitbucketMaster"
      # akaterra1/testa:
      #   type: "gitlab"
      #   title: "Test A"
      #   config:
      #     integration: "gitlabMain"
      # gp-analytics-service:
      #   type: "github"
      #   title: "Analytics"
      #   config:
      #     integration: "githubMain"
      # gp-deliveries-service:
      #   type: "github"
      #   title: "Deliveries"
      #   config:
      #     integration: "githubMaster"
    versioning: "current"
