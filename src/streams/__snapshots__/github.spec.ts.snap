// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Github stream should bookmark 1`] = `
[
  {
    "args": {
      "*": [],
      "scopes": {
        "change": true,
      },
      "streamId": undefined,
      "targetId": undefined,
    },
    "name": "TestProject.getStreamStateByTargetIdAndStreamId",
  },
  {
    "name": "TestProject.getStreamStateByTargetIdAndStreamId",
    "result": {
      "history": {
        "change": [
          {
            "id": "changeId",
          },
        ],
      },
      "version": "version",
    },
  },
  {
    "args": {
      "*": [],
      "commitMessage": null,
      "lightweight": false,
      "org": null,
      "repo": "repo",
      "sha": "changeId",
      "tag": "version",
    },
    "name": "TestGithubIntegrationService.tagCreate",
  },
  {
    "name": "TestGithubIntegrationService.tagCreate",
  },
]
`;

exports[`Github stream should bookmark with stream id as repo 1`] = `
[
  {
    "args": {
      "*": [],
      "scopes": {
        "change": true,
      },
      "streamId": undefined,
      "targetId": undefined,
    },
    "name": "TestProject.getStreamStateByTargetIdAndStreamId",
  },
  {
    "name": "TestProject.getStreamStateByTargetIdAndStreamId",
    "result": {
      "history": {
        "change": [
          {
            "id": "changeId",
          },
        ],
      },
      "version": "version",
    },
  },
  {
    "args": {
      "*": [],
      "commitMessage": null,
      "lightweight": false,
      "org": null,
      "repo": "test",
      "sha": "changeId",
      "tag": "version",
    },
    "name": "TestGithubIntegrationService.tagCreate",
  },
  {
    "name": "TestGithubIntegrationService.tagCreate",
  },
]
`;

exports[`Github stream should detach 1`] = `
[
  {
    "args": {
      "*": [],
      "assertType": "github",
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
          "repo": "repo",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getEnvIntegraionByTargetStream",
  },
  {
    "name": "TestProject.getEnvIntegraionByTargetStream",
    "result": {
      "$$data": "TestGithubIntegrationService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [],
      "assertType": "github",
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
          "repo": "repo",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getEnvIntegraionByTargetStream",
  },
  {
    "name": "TestProject.getEnvIntegraionByTargetStream",
    "result": {
      "$$data": "TestGithubIntegrationService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [],
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
          "repo": "repo",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getTargetByTargetStream",
  },
  {
    "name": "TestProject.getTargetByTargetStream",
    "result": {
      "id": "testTarget",
      "type": "test",
      "versioning": "test",
    },
  },
  {
    "args": {
      "*": [],
      "target": {
        "id": "testTarget",
        "type": "test",
        "versioning": "test",
      },
    },
    "name": "TestProject.getEnvVersioningByTarget",
  },
  {
    "name": "TestProject.getEnvVersioningByTarget",
    "result": {
      "$$data": "TestVersioningService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [
        "branch",
      ],
      "target": {
        "id": "testTarget",
        "type": "test",
        "versioning": "test",
      },
    },
    "name": "TestVersioningService.getCurrent",
  },
  {
    "name": "TestVersioningService.getCurrent",
    "result": "testBranch",
  },
  {
    "args": {
      "*": [],
      "branch": "testBranch",
      "repo": "repo",
    },
    "name": "TestGithubIntegrationService.branchDelete",
  },
  {
    "name": "TestGithubIntegrationService.branchDelete",
  },
]
`;

exports[`Github stream should detach with stream id as repo 1`] = `
[
  {
    "args": {
      "*": [],
      "assertType": "github",
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getEnvIntegraionByTargetStream",
  },
  {
    "name": "TestProject.getEnvIntegraionByTargetStream",
    "result": {
      "$$data": "TestGithubIntegrationService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [],
      "assertType": "github",
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getEnvIntegraionByTargetStream",
  },
  {
    "name": "TestProject.getEnvIntegraionByTargetStream",
    "result": {
      "$$data": "TestGithubIntegrationService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [],
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getTargetByTargetStream",
  },
  {
    "name": "TestProject.getTargetByTargetStream",
    "result": {
      "id": "testTarget",
      "type": "test",
      "versioning": "test",
    },
  },
  {
    "args": {
      "*": [],
      "target": {
        "id": "testTarget",
        "type": "test",
        "versioning": "test",
      },
    },
    "name": "TestProject.getEnvVersioningByTarget",
  },
  {
    "name": "TestProject.getEnvVersioningByTarget",
    "result": {
      "$$data": "TestVersioningService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [
        "branch",
      ],
      "target": {
        "id": "testTarget",
        "type": "test",
        "versioning": "test",
      },
    },
    "name": "TestVersioningService.getCurrent",
  },
  {
    "name": "TestVersioningService.getCurrent",
    "result": "testBranch",
  },
  {
    "args": {
      "*": [],
      "branch": "testBranch",
      "repo": "test",
    },
    "name": "TestGithubIntegrationService.branchDelete",
  },
  {
    "name": "TestGithubIntegrationService.branchDelete",
  },
]
`;

exports[`Github stream should get state 1`] = `
[
  {
    "args": {
      "*": [],
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "GithubStreamService.streamGetState",
  },
  {
    "args": {
      "*": [],
      "assertType": "github",
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getEnvIntegraionByTargetStream",
  },
  {
    "name": "TestProject.getEnvIntegraionByTargetStream",
    "result": {
      "$$data": "TestGithubIntegrationService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [],
      "assertType": "github",
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getEnvIntegraionByTargetStream",
  },
  {
    "name": "TestProject.getEnvIntegraionByTargetStream",
    "result": {
      "$$data": "TestGithubIntegrationService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [],
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getTargetByTargetStream",
  },
  {
    "name": "TestProject.getTargetByTargetStream",
    "result": {
      "id": "testTarget",
      "type": "test",
      "versioning": "test",
    },
  },
  {
    "args": {
      "*": [],
      "target": {
        "id": "testTarget",
        "type": "test",
        "versioning": "test",
      },
    },
    "name": "TestProject.getEnvVersioningByTarget",
  },
  {
    "name": "TestProject.getEnvVersioningByTarget",
    "result": {
      "$$data": "TestVersioningService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [
        "branch",
      ],
      "target": {
        "id": "testTarget",
        "type": "test",
        "versioning": "test",
      },
    },
    "name": "TestVersioningService.getCurrent",
  },
  {
    "name": "TestVersioningService.getCurrent",
    "result": "testBranch",
  },
  {
    "args": {
      "*": [],
      "branch": "testBranch",
      "repo": "test",
    },
    "name": "TestGithubIntegrationService.branchGet",
  },
  {
    "name": "TestGithubIntegrationService.branchGet",
    "result": {
      "_links": {
        "html": "branchLink",
      },
      "commit": {
        "commit": {
          "author": {
            "html_url": "commitAuthorLink",
            "name": "commitAuthorName",
          },
          "committer": {
            "date": "2020-01-01",
          },
          "message": "commitMessage",
        },
        "html_url": "commitLink",
        "sha": "commitSha",
      },
    },
  },
  {
    "args": {
      "*": [],
      "stream": {
        "config": {
          "branch": "branch",
          "integration": "test",
          "org": "org",
        },
        "id": "test",
        "ref": {
          "projectId": "test",
        },
        "type": "github",
      },
    },
    "name": "TestProject.getTargetByTargetStream",
  },
  {
    "name": "TestProject.getTargetByTargetStream",
    "result": {
      "id": "testTarget",
      "type": "test",
      "versioning": "test",
    },
  },
  {
    "args": {
      "*": [],
      "target": {
        "id": "testTarget",
        "type": "test",
        "versioning": "test",
      },
    },
    "name": "TestProject.getEnvVersioningByTarget",
  },
  {
    "name": "TestProject.getEnvVersioningByTarget",
    "result": {
      "$$data": "TestVersioningService",
      "$$type": "instanceOf",
    },
  },
  {
    "args": {
      "*": [],
      "branch": "testBranch",
      "org": "org",
      "repo": "test",
    },
    "name": "TestGithubIntegrationService.workflowRunsGet",
  },
  {
    "name": "TestGithubIntegrationService.workflowRunsGet",
    "result": [
      {
        "actor": {
          "html_url": "workflowActorLink",
          "name": "workflowActorName",
        },
        "id": "workflowId",
      },
    ],
  },
  {
    "args": {
      "*": [],
      "org": "org",
      "repo": "test",
      "runId": "workflowId",
    },
    "name": "TestGithubIntegrationService.workflowJobsGet",
  },
  {
    "name": "TestGithubIntegrationService.workflowJobsGet",
    "result": [
      {
        "html_url": "workflowJobLink",
        "steps": [
          {
            "completed_at": "2020-01-02",
            "conclusion": "success",
            "name": "workflowJobName",
            "number": 1,
            "started_at": "2020-01-01",
          },
        ],
      },
    ],
  },
  {
    "name": "GithubStreamService.streamGetState",
    "result": {
      "history": {
        "action": [
          {
            "author": {
              "link": "workflowActorLink",
              "name": "workflowActorName",
            },
            "description": undefined,
            "id": "workflowId",
            "link": null,
            "metadata": {},
            "status": null,
            "steps": {
              "1": {
                "description": "workflowJobName",
                "id": "1",
                "link": "workflowJobLink#step:1:1",
                "runningTimeSeconds": 86400,
                "status": "completed",
                "type": "github:workflow:job",
              },
            },
            "time": null,
            "type": "github:workflow",
          },
        ],
        "artifact": [],
        "change": [
          {
            "author": {
              "link": "commitAuthorLink",
              "name": "commitAuthorName",
            },
            "description": "commitMessage",
            "id": "commitSha",
            "link": "commitLink",
            "metadata": {},
            "status": null,
            "steps": null,
            "time": {},
            "type": "github:commit",
          },
        ],
      },
      "id": "test",
      "isSyncing": false,
      "link": "branchLink",
      "metadata": {
        "branch": "testBranch",
        "org": "org",
      },
      "projectId": "test",
      "targetId": undefined,
      "type": "github",
      "ver": 1,
      "version": null,
    },
  },
]
`;
